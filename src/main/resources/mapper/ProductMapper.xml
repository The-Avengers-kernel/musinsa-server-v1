<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.avengers.musinsa.mapper.ProductMapper">

    <select id="getRecommendationProductList"
            resultType="com.avengers.musinsa.domain.product.dto.response.RecommendationResponse">
        SELECT p.product_id    AS productId,
               b.brand_id      AS brandId,
               p.product_name  AS productName,
               b.brand_name_kr AS productBrand,
               p.price         AS productPrice,
               img.image_url   AS productImage
        FROM products p
                 JOIN brands b
                      ON b.brand_id = p.brand_id
                 LEFT JOIN product_images img
                           ON p.product_id = img.product_id
                               AND img.image_type = 'MAIN'
        WHERE p.gender = #{gender}
        ORDER BY p.created_at DESC
            FETCH FIRST 20 ROWS ONLY
    </select>

    <select id="getProductsByCategory" parameterType="integer" resultType="com.avengers.musinsa.domain.product.dto.response.ProductByCategoryResponse">
        select p.product_name as productName,
               pimg.image_url as productImage,
               b.brand_name_kr as brandName,
               p.price as price,
               ranked_products.product_likes as productLikes,
               recommendation_score
        from (
                 select p.product_id,
                        p.product_name,
                        p.brand_id,
                        p.price,
                        p.product_likes,
                        -- 가중치 계산
                        (
                        coalesce(order_stats.total_orders, 0) * 3.0 +
                        coalesce(prs.rating_avg, 3.0) * 2.0 +
                        coalesce(p.product_likes, 0) * 0.5
                        ) as recommendation_score
                 from products p

                          -- 주문 통계 (상품별 총 주문 수)
                 left join (
                    select oi.product_id, count(oi.order_item_id) as total_orders
                    from order_items oi
                    join orders o
                        on o.order_id = oi.order_id

                    where o.order_status not in ('취소', '반품완료')
                    group by oi.product_id
                 ) order_stats on order_stats.product_id = p.product_id

                     -- 리뷰 평점 통계
                 left join (
                     select prs.product_id,
                            prs.rating_avg
                     from product_review_stats prs
                     group by prs.product_id
                     ) prs on p.product_id = prs.product_id

                     where p.product_category_id = #{categoryId}
                 ) ranked_products

        join brands b on b.brand_id = ranked_products.brand_id
        join product_images pimg on pimg.product_id = ranked_products.product_id

        where pimg.image_type = 'MAIN'
        order by recommendation_score desc
        fetch first 50 rows only
    </select>

</mapper>









